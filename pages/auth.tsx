import Head from "next/head";

import Transitions from "@src/components/global/Transition";
import {
  ClientSafeProvider,
  getProviders,
  LiteralUnion,
  signIn,
} from "next-auth/react";

import { BuiltInProviderType } from "next-auth/providers";
import { GetServerSideProps } from "next";

interface Props {
  providers:
    | Record<LiteralUnion<BuiltInProviderType, string>, ClientSafeProvider>[]
    | null;
}

const Login: React.FC<Props> = ({ providers }) => {
  return (
    <Transitions key="Login">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link
          rel="icon"
          href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>ðŸ—¿</text></svg>"
        />
      </Head>
      <div>
        <div className="grid h-[100vh] w-full place-content-center">
          {providers &&
            Object.values(providers).map((provider: any) => (
              <div key={provider.name}>
                {/* https://devdojo.com/tailwindcss/buttons#_ */}
                <button
                  className="relative inline-flex items-center justify-start px-8 py-4 overflow-hidden text-xl transition-all bg-white rounded hover:bg-white group"
                  onClick={() => signIn(provider.id, { callbackUrl: "/" })}
                >
                  <span className="w-48 h-48 rounded rotate-[-40deg] bg-[#1d9bf0] absolute bottom-0 left-0 -translate-x-full ease-out duration-500 transition-all translate-y-full mb-9 ml-9 group-hover:ml-0 group-hover:mb-32 group-hover:translate-x-0"></span>
                  <span className="relative w-full text-left text-black transition-colors duration-300 ease-in-out group-hover:text-white">
                    Sign in with {provider.name} to continue
                  </span>
                </button>
              </div>
            ))}
        </div>
      </div>
    </Transitions>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const providers = await getProviders();

  return {
    props: {
      providers,
    },
  };
};

export default Login;
